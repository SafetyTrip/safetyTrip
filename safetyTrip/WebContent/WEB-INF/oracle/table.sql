
/* Drop Triggers */

DROP TRIGGER TRI_CITY_cityno;
DROP TRIGGER TRI_COUNTRY_couno;
DROP TRIGGER TRI_HOTEL_hno;
DROP TRIGGER TRI_QNA_qno;
DROP TRIGGER TRI_RESERVATION_resno;
DROP TRIGGER TRI_REVIEW_revno;
DROP TRIGGER TRI_REV_COMMENT_comno;
DROP TRIGGER TRI_REV_HOTEL_rhno;
DROP TRIGGER TRI_SAFETY_sno;
DROP TRIGGER TRI_USERS_uno;



/* Drop Tables */

DROP TABLE QNA CASCADE CONSTRAINTS;
DROP TABLE RESERVATION CASCADE CONSTRAINTS;
DROP TABLE REV_HOTEL CASCADE CONSTRAINTS;
DROP TABLE HOTEL CASCADE CONSTRAINTS;
DROP TABLE REV_COMMENT CASCADE CONSTRAINTS;
DROP TABLE REVIEW CASCADE CONSTRAINTS;
DROP TABLE CITY CASCADE CONSTRAINTS;
DROP TABLE SAFETY CASCADE CONSTRAINTS;
DROP TABLE COUNTRY CASCADE CONSTRAINTS;
DROP TABLE USERS CASCADE CONSTRAINTS;



/* Drop Sequences */

DROP SEQUENCE SEQ_CITY_cityno;
DROP SEQUENCE SEQ_COUNTRY_couno;
DROP SEQUENCE SEQ_HOTEL_hno;
DROP SEQUENCE SEQ_QNA_qno;
DROP SEQUENCE SEQ_RESERVATION_resno;
DROP SEQUENCE SEQ_REVIEW_revno;
DROP SEQUENCE SEQ_REV_COMMENT_comno;
DROP SEQUENCE SEQ_REV_HOTEL_rhno;
DROP SEQUENCE SEQ_SAFETY_sno;
DROP SEQUENCE SEQ_USERS_uno;




/* Create Sequences */

CREATE SEQUENCE SEQ_CITY_cityno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_COUNTRY_couno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_HOTEL_hno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_QNA_qno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_RESERVATION_resno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_REVIEW_revno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_REV_COMMENT_comno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_REV_HOTEL_rhno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_SAFETY_sno INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_USERS_uno INCREMENT BY 1 START WITH 1;



/* Create Tables */

CREATE TABLE CITY
(
	cityno number(10,0) constraint city_cityno_nn NOT NULL,
	couno number(3,0) constraint city_cunno_nn NOT NULL,
	cityname varchar2(10) constraint city_cityname_nn NOT NULL,
	cityename varchar2(20) constraint city_cityename_nn NOT NULL,
	constraint city_cityno_pk PRIMARY KEY (cityno)
);


CREATE TABLE COUNTRY
(
	couno number(3,0) NOT NULL,
	cname varchar2(10) NOT NULL UNIQUE,
	cename varchar2(20) NOT NULL UNIQUE,
	PRIMARY KEY (couno)
);


CREATE TABLE HOTEL
(
	hno number(7,0) NOT NULL,
	cityno number(10,0) NOT NULL,
	hname varchar2(10) NOT NULL,
	revlike number(10,0),
	rooms varchar2(100),
	PRIMARY KEY (hno)
);


CREATE TABLE QNA
(
	qno number(4,0) NOT NULL,
	uno number(7,0) NOT NULL,
	hno number(7,0) NOT NULL,
	question varchar2(1000) NOT NULL,
	answer varchar2(1000) DEFAULT '',
	qopen number(1) DEFAULT 1 NOT NULL CHECK(qopen = 0 or qopen = 1),
	createdate date DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY (qno)
);


CREATE TABLE RESERVATION
(
	resno number(8) NOT NULL,
	uno number(7,0) NOT NULL,
	hno number(7,0) NOT NULL,
	room number(4,0) NOT NULL,
	sdate date NOT NULL,
	edate date NOT NULL,
	createdate date DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY (resno)
);


CREATE TABLE REVIEW
(
	revno number(7,0) NOT NULL,
	uno number(7,0) NOT NULL,
	cityno number(10,0) NOT NULL,
	title varchar2(20) NOT NULL,
	content varchar2(3000) NOT NULL,
	count number(10,0),
	revlike number(10,0),
	createdate date DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY (revno)
);


CREATE TABLE REV_COMMENT
(
	comno number(10,0) NOT NULL,
	revno number(7,0) NOT NULL,
	uno number(7,0) NOT NULL,
	comcontent varchar2(1000),
	createdate date DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY (comno)
);


CREATE TABLE REV_HOTEL
(
	rhno number(10,0) NOT NULL,
	revno number(7,0) NOT NULL,
	hno number(7,0) NOT NULL,
	PRIMARY KEY (rhno)
);


CREATE TABLE SAFETY
(
	sno number(3,0) NOT NULL,
	couno number(3,0) NOT NULL,
	title varchar2(20) NOT NULL,
	content varchar2(3000) NOT NULL,
	id varchar2(20) NOT NULL UNIQUE,
	createdate date DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY (sno)
);


CREATE TABLE USERS
(
	uno number(7,0) NOT NULL,
	userid varchar2(10) NOT NULL UNIQUE,
	passwd varchar2(10) NOT NULL,
	email varchar2(20) NOT NULL UNIQUE,
	uname varchar2(10) NOT NULL UNIQUE,
	name varchar2(10) NOT NULL,
	passport number(10,0) NOT NULL,
	sex nchar NOT NULL CHECK(sex = 'M' or sex = 'F'),
	birth date NOT NULL,
	post number(5,0),
	address1 varchar2(100),
	address2 varchar2(100),
	createdate date DEFAULT SYSDATE NOT NULL,
	eaccess number(1) DEFAULT 0 NOT NULL CHECK(eaccess = 0 or eaccess = 1),
	PRIMARY KEY (uno)
);



/* Create Foreign Keys */

ALTER TABLE HOTEL
	ADD FOREIGN KEY (cityno)
	REFERENCES CITY (cityno)
;


ALTER TABLE REVIEW
	ADD FOREIGN KEY (cityno)
	REFERENCES CITY (cityno)
;


ALTER TABLE CITY
	ADD FOREIGN KEY (couno)
	REFERENCES COUNTRY (couno)
;


ALTER TABLE SAFETY
	ADD FOREIGN KEY (couno)
	REFERENCES COUNTRY (couno)
;


ALTER TABLE QNA
	ADD FOREIGN KEY (hno)
	REFERENCES HOTEL (hno)
;


ALTER TABLE RESERVATION
	ADD FOREIGN KEY (hno)
	REFERENCES HOTEL (hno)
;


ALTER TABLE REV_HOTEL
	ADD FOREIGN KEY (hno)
	REFERENCES HOTEL (hno)
;


ALTER TABLE REV_COMMENT
	ADD FOREIGN KEY (revno)
	REFERENCES REVIEW (revno)
;


ALTER TABLE REV_HOTEL
	ADD FOREIGN KEY (revno)
	REFERENCES REVIEW (revno)
;


ALTER TABLE QNA
	ADD FOREIGN KEY (uno)
	REFERENCES USERS (uno)
;


ALTER TABLE RESERVATION
	ADD FOREIGN KEY (uno)
	REFERENCES USERS (uno)
;


ALTER TABLE REVIEW
	ADD FOREIGN KEY (uno)
	REFERENCES USERS (uno)
;


ALTER TABLE REV_COMMENT
	ADD FOREIGN KEY (uno)
	REFERENCES USERS (uno)
;



/* Create Triggers */

CREATE OR REPLACE TRIGGER TRI_CITY_cityno BEFORE INSERT ON CITY
FOR EACH ROW
BEGIN
	SELECT SEQ_CITY_cityno.nextval
	INTO :new.cityno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_COUNTRY_couno BEFORE INSERT ON COUNTRY
FOR EACH ROW
BEGIN
	SELECT SEQ_COUNTRY_couno.nextval
	INTO :new.couno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_HOTEL_hno BEFORE INSERT ON HOTEL
FOR EACH ROW
BEGIN
	SELECT SEQ_HOTEL_hno.nextval
	INTO :new.hno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_QNA_qno BEFORE INSERT ON QNA
FOR EACH ROW
BEGIN
	SELECT SEQ_QNA_qno.nextval
	INTO :new.qno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_RESERVATION_resno BEFORE INSERT ON RESERVATION
FOR EACH ROW
BEGIN
	SELECT SEQ_RESERVATION_resno.nextval
	INTO :new.resno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_REVIEW_revno BEFORE INSERT ON REVIEW
FOR EACH ROW
BEGIN
	SELECT SEQ_REVIEW_revno.nextval
	INTO :new.revno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_REV_COMMENT_comno BEFORE INSERT ON REV_COMMENT
FOR EACH ROW
BEGIN
	SELECT SEQ_REV_COMMENT_comno.nextval
	INTO :new.comno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_REV_HOTEL_rhno BEFORE INSERT ON REV_HOTEL
FOR EACH ROW
BEGIN
	SELECT SEQ_REV_HOTEL_rhno.nextval
	INTO :new.rhno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_SAFETY_sno BEFORE INSERT ON SAFETY
FOR EACH ROW
BEGIN
	SELECT SEQ_SAFETY_sno.nextval
	INTO :new.sno
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_USERS_uno BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
	SELECT SEQ_USERS_uno.nextval
	INTO :new.uno
	FROM dual;
END;

/




